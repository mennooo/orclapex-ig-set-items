window.mho=window.mho||{},function(e){let t=[],i={label:{onTrue:function(e){let t=$('label[for="'+e+'"');t.find(".multi-marker").remove(),t.prepend('<span class="fa fa-layers multi-marker u-hot-text" aria-hidden="true"></span> ')},onFalse:function(e){let t;$('label[for="'+e+'"').find(".multi-marker").remove()}}};function n(e){let t=apex.region(e),i=t.widget(),n=$.Deferred();return i.length>0?n.resolve(i):t.element.on("interactivegridcreate",function(){n.resolve(t.widget())}),n.promise()}function o(e){return apex.model.get(e.grid("option","modelName"))}function r(e){return 0===e.length?[]:e.split(",")}function s(e){return e.every(function(t){return t===e[0]})}function l(e){let t=e.grid("getColumns"),i=o(e);return t.filter(function(e){return i.isIdentityField(e.property)}).map(function(e){return e.property})}function d(e){return"string"==typeof e?e:$.isArray(e)?1===e.length?""+e[0]:JSON.stringify(e):e.toString()}function c(e,t,i){let n=e.grid("getSelectedRecords"),r=o(e);if(n.length>0&&!i)return;let s=[];"string"==typeof t?s=[t]:$.isArray(t)&&t.forEach(function(e){let t=r.getRecord(d(e));t&&s.push(t)}),s.length>0&&e.grid("setSelectedRecords",s,!1)}function g(){this.observers=[],this.checks=[]}function u(e,t){g.call(this),this.itemName=e,this.item=apex.item(this.itemName),this.item$=$(this.item.node),this.ignoreChange=!1,this.multiSelectionMethod=i[t],this.initChange()}function a(e,t,i,n){g.call(this),this.columnName=e,this.grid=t,this.isPrimaryKey=i,this.columnConfig,this.columnItem,this.disableItem=n,this.selectedRecords=[],this.setColumnConfig(),this.setColumnItem(),this.addChecks(),this.grid.model.allowEdit()&&this.initModelEvents()}function h(e,t,i,n,o,r){this.columnBinding=new a(e,i,n,o),this.itemBinding=new u(t,r),this.allowEdit=this.columnBinding.grid.model.allowEdit(),this.columnBinding.subscribe("noselection",$.proxy(this.onNoSelection,this)),this.columnBinding.subscribe("select",$.proxy(this.onSelectRow,this)),this.allowEdit&&(this.columnBinding.subscribe("metachange",$.proxy(this.onMetaChange,this)),this.columnBinding.subscribe("delete",$.proxy(this.onDelete,this)),this.columnBinding.subscribe("set",$.proxy(this.onSetColumn,this))),this.allowEdit&&(this.columnBinding.isPrimaryKey||this.itemBinding.subscribe("change",$.proxy(this.onChangeItem,this)))}function m(e){let i;n(e.regionId).done(function(i){let n=r(e.pkItems),o=r(e.pageItems),s=r(e.columns),d=i.interactiveGrid("getViews").grid,c=[],g=i.interactiveGrid("option","config.editable.autoAddRow");if(d){if(d.model.subscribe({onChange:function(e,t){"addData"===e&&(0!==t.count||g||d.view$.trigger("mho:ig:noselectedrows"))}}),i.on("interactivegridselectionchange",function(e,t){0===t.selectedRecords.length?i.trigger("mho:ig:noselectedrows"):i.trigger("mho:ig:selectedrows")}),n.length>0){let t=l(d.view$);n.forEach(function(i,n){c.push(new h(t[n],i,d,!0,e.disableItems,e.multiSelectionMethod))})}o.forEach(function(t,i){c.push(new h(s[i],t,d,!1,e.disableItems,e.multiSelectionMethod))}),t[e.regionId]=c}})}function f(e){if(e.da.browserEvent.originalEvent&&"recordviewrecordchange"===e.da.browserEvent.originalEvent.type)return;let i=t[e.da.triggeringElement.id],n=e.da.data.selectedRecords;i.forEach(function(e){e.columnBinding.notify("select",n)})}function p(e){let t;n(e.regionId).done(function(t){let i=t.interactiveGrid("getViews").grid,n,o=r(e.pkItem).map(function(e){return apex.item(e).getValue()});o&&(o[0].indexOf(":")>-1&&(o=o[0].split(":")),c(i.view$,o,!0))})}g.prototype.subscribe=function(e,t){this.observers[e]||(this.observers[e]=[]),this.observers[e].push(t)},g.prototype.notify=function(e){let t=Array.from(arguments),i=this.observers[e],n=this;t.shift(),Array.isArray(i)&&i.forEach(function(e){e.apply(n,t)})},g.prototype.check=function(e){let t=this.checks[e],i=$.Deferred(),n=this;this.selectedRecords=this.grid.view$.grid("getSelectedRecords");let o=t.subchecks.filter(function(e){let t;return!1===e.fn.apply(n)});if(o.length>0){let e=o.map(function(e){return e.msgOnError});this.debug(t.name,e),i.reject(t.name,e)}else i.resolve(t.name);return i.promise()},g.prototype.debug=function(e,t){apex.debug(e,"has failed with following reasons"),t.forEach(function(e){apex.debug("-",e)})},u.prototype=Object.create(g.prototype),u.prototype.initChange=function(){let e=this;this.item$.on("change",function(){e.ignoreChange||e.notify("change",{value:e.item.getValue()})})},u.prototype.toggleMultiSelection=function(e){e?this.multiSelectionMethod.onFalse(this.item.id):this.multiSelectionMethod.onTrue(this.item.id)},u.prototype.setValue=function(e,t){this.ignoreChange=!0,this.item.setValue(e,t),this.ignoreChange=!1},u.prototype.setDisabled=function(e){this.item$.prop("disabled",e)},u.prototype.showError=function(e){e?apex.message.showErrors([{message:e,location:"inline",pageItem:this.itemName}]):apex.message.clearErrors(this.itemName)},a.prototype=Object.create(g.prototype),a.prototype.initModelEvents=function(){let e=this;this.grid.model.subscribe({onChange:function(t,i){if("delete"===t){let t=[];i.recordIds.forEach(function(i){e.selectedRecords.forEach(function(n){i===e.grid.model.getRecordId(n)&&t.push(i)})}),t.length>0&&e.notify("delete")}else if("set"===t){let t=[];e.selectedRecords.forEach(function(n){i.recordId===e.grid.model.getRecordId(n)&&t.push(i.recordId)}),t.length>0&&e.notify("set")}else"metaChange"===t?e.notify("metachange"):"addData"===t&&0===i.count&&e.notify("noselection")}})},a.prototype.setColumnConfig=function(){let e=this.grid.view$.grid("getColumns"),t=this;this.columnConfig=e.filter(function(e){return e.property===t.columnName})[0]},a.prototype.setColumnItem=function(){this.columnItem=apex.item(this.columnConfig.elementId)},a.prototype.singleRecordSelected=function(){return!this.isRecordSelected()||1===this.selectedRecords.length},a.prototype.isRecordSelected=function(){return this.selectedRecords.length>0},a.prototype.isEditable=function(){let e=this,t;return this.selectedRecords.filter(function(t){let i=e.grid.model.getRecordId(t),n=e.grid.model.getRecordMetadata(i);return!!e.grid.model.allowEdit(t)||(!!n.inserted||!(!n.allowedOperations||!n.allowedOperations.update))}).length>0},a.prototype.recordIsNotDeleted=function(){let e=this,t;return 0===this.selectedRecords.filter(function(t){let i=e.grid.model.getRecordId(t);return e.grid.model.getRecordMetadata(i).deleted}).length},a.prototype.addChecks=function(){this.checks.set={name:"Checks to execute before setting the column value",subchecks:[{fn:this.isEditable,msgOnError:"The column for this record is not editable"},{fn:this.recordIsNotDeleted,msgOnError:"The record is deleted"}]},this.checks.beforeEditableGet={name:"Checks to execute before getting and passing a column value from an editable grid",subchecks:[{fn:this.recordIsNotDeleted,msgOnError:"The record is deleted"}]},this.checks.beforeNonEditableGet={name:"Checks to execute before getting and passing a column value from a non editable grid",subchecks:[{fn:this.isRecordSelected,msgOnError:"No records selected"}]},this.checks.beforePrimaryKeyGet={name:"Checks to execute before getting and passing a primary key column value from a grid",subchecks:[{fn:this.isRecordSelected,msgOnError:"No records selected"}]},this.checks.getrecord={name:"Checks to execute before getting the active record",subchecks:[{fn:this.isRecordSelected,msgOnError:"No records selected"}]}},a.prototype.setValue=function(e){let t=this;this.check("set").then(function(){t.columnItem.setValue(e);let i=t.columnItem.getValidity();t.selectedRecords.forEach(function(n){let o=t.grid.model.getRecordId(n);t.grid.model.setValue(n,t.columnName,e),i.valid?t.grid.model.setValidity("valid",o,t.columnName):t.grid.model.setValidity("error",o,t.columnName,t.columnItem.getValidationMessage())})})},a.prototype.getValue=function(){return this.grid.model.getValue(this.selectedRecords[0],this.columnName)},a.prototype.getSelectedRowsValues=function(){let e=this,t=[];return this.selectedRecords.forEach(function(i){let n=e.grid.model.getRecordId(i);if(!e.grid.model.getRecordMetadata(n).deleted){let n=e.grid.model.getValue(i,e.columnName);t.push(n.v||n)}}),e.isPrimaryKey?t.join(":"):s(t)?t[0]:""},a.prototype.getError=function(){let e=this,t;return this.selectedRecords.map(function(t){let i=e.grid.model.getRecordId(t),n=e.grid.model.getRecordMetadata(i);if(!n.fields)return;let o=n.fields[e.columnName];return o&&o.error?o.message:void 0})[0]},h.prototype.onMetaChange=function(){let e=this;setTimeout(function(){e.itemBinding.showError(e.columnBinding.getError())})},h.prototype.onSetColumn=function(){this.itemBinding.setValue(this.columnBinding.getValue()),this.itemBinding.showError(this.columnBinding.getError())},h.prototype.onDelete=function(){this.itemBinding.setValue(""),this.itemBinding.setDisabled(!0)},h.prototype.onNoSelection=function(){this.itemBinding.setValue(""),this.itemBinding.setDisabled(!0)},h.prototype.onSelectRow=function(e){this.columnBinding.selectedRecords=e;let t=this;this.columnBinding.isPrimaryKey?this.columnBinding.check("beforePrimaryKeyGet").done(function(){t.itemBinding.setDisabled(t.columnBinding.disableItem),t.itemBinding.toggleMultiSelection(t.columnBinding.singleRecordSelected()),t.itemBinding.setValue(t.columnBinding.getSelectedRowsValues())}).fail(function(e){t.itemBinding.setValue(""),t.itemBinding.toggleMultiSelection(t.columnBinding.singleRecordSelected()),t.itemBinding.setDisabled(!0)}):this.allowEdit?this.columnBinding.check("beforeEditableGet").done(function(){t.itemBinding.setDisabled(!t.columnBinding.isEditable()),t.itemBinding.setValue(t.columnBinding.getSelectedRowsValues()),t.itemBinding.toggleMultiSelection(t.columnBinding.singleRecordSelected()),t.itemBinding.showError(t.columnBinding.getError())}).fail(function(e){t.itemBinding.setValue(""),t.itemBinding.toggleMultiSelection(t.columnBinding.singleRecordSelected()),t.itemBinding.setDisabled(!0)}):this.columnBinding.check("beforeNonEditableGet").done(function(){t.itemBinding.setDisabled(t.columnBinding.disableItem),t.itemBinding.toggleMultiSelection(t.columnBinding.singleRecordSelected()),t.itemBinding.setValue(t.columnBinding.getValue())})},h.prototype.onAddRow=function(){this.columnBinding.setValue(""),this.itemBinding.toggleMultiSelection(this.columnBinding.singleRecordSelected()),this.itemBinding.showError(this.columnBinding.getError())},h.prototype.onChangeItem=function(e){this.columnBinding.setValue(e.value),this.itemBinding.toggleMultiSelection(this.columnBinding.singleRecordSelected()),this.itemBinding.showError(this.columnBinding.getError())},e.IGSetItems={addDataBinding:m,setRowItems:f,selectRecordWithPkPageItemValue:p}}(window.mho);